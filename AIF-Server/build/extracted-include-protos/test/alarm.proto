syntax = "proto3";

package aif.kaist;

import "google/protobuf/empty.proto";

option java_package = "aif.kaist.iclab.protos";
option java_outer_classname = "AlarmProtos";

message Alarm {
    string user_id = 1;  // user id
    string alarm_id = 2; // unique alarm id 
    string destination = 3;  // server address that this alarm will be sent; the form is HOST:PORT (e.g., test.ac.kr:50051)
    int64 delay_millis = 4;  // (initial) delay in milliseconds; this alarm will be sent after this param.
    int64 interval_millis = 5;  // interval in milliseconds; if you want to repeated alarms, this param should be set.
    int64 scheduled_millis = 6;  // server time when this alarm is scheduled.
    string content = 7;  // free content.

    message Query {
        message List {
            string user_id = 1;
        }

        message Get {
            string user_id = 1;
            string alarm_id = 2;
        }

        message Create {
            /* alarm_id and scheduled_millis in Alarm is ignored. */
            string user_id = 1;
            Alarm alarm = 2;
        }

        message Delete {
            string user_id = 1;
            string alarm_id = 2;
        }
    }
}

service AlarmScheduleService {
    rpc ListAlarm(Alarm.Query.List) returns (stream Alarm) {}
    rpc GetAlarm(Alarm.Query.Get) returns (Alarm) {}
    rpc CreateAlarm(Alarm.Query.Create) returns (Alarm) {}
    rpc DeleteAlarm(Alarm.Query.Delete) returns (google.protobuf.Empty) {}
}

// For receiving alarms, this service should be implemented.
service AlarmReceiverService {
    rpc ReceiveAlarm(Alarm) returns (google.protobuf.Empty) {}
}